/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// set up stuff
// pip3 install --user -U west
// echo 'export PATH=~/.local/bin:"$PATH"' >> ~/.bashrc
// source ~/.bashrc
// reopen this repo in container (can be via vscode prompt)
// west init -l app/                if never done before
// west update && pip3 install --user -r zephyr/scripts/requirements-base.txt && source zephyr/zephyr-env.sh
// run from zmk/app west build -p -b mikoto_520 -d build/left -- -DSHIELD=lily58_left -DZMK_CONFIG="/workspaces/zmk/app/my_config/config"
// run from zmk/app west build -p -b mikoto_520 -d build/right -- -DSHIELD=lily58_right -DZMK_CONFIG="/workspaces/zmk/app/my_config"
// sudo docker cp <docker id>:/workspaces/zmk/app/build/left/zephyr/zmk.uf2 <some local folder>
// sudo docker cp <docker id>:/workspaces/zmk/app/build/right/zephyr/zmk.uf2 <some local folder>
// if right side is not communicating, check toggle external power

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
			bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp BACKSPACE
&kp TAB   &kp S  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &kp EQUAL
&kp LCTRL &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp ENTER
&kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B &kp LBKT   &kp RBKT &kp N &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                    &kp LGUI  &kp SPACE &kp LALT &mo 1  &kp DOWN  &kp SPACE  &kp RIGHT  &mo 1 &kp LEFT &kp UP
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |+-
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&bt BT_CLR     &kp F2           &kp F3            &kp F4            &kp F5       &kp F6                 &kp F7    &kp F8    &kp F9          &kp F10   &kp F11      &kp DELETE
&kp GRAVE     &kp F1           &kp UP            &kp F4            &kp K_FORWARD       &kp F6                       &kp F12    &kp F8    &kp F9   &kp F10  &kp MINUS  &kp BSLH
&kp LCTRL  &kp LEFT         &kp DOWN            &kp RIGHT          &kp K_BACK   &kp PRCNT                    &kp INSERT &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp APOSTROPHE  &kp APOSTROPHE
&kp LSHFT &out OUT_TOG     &trans  &trans &kp LC(Z)      &kp LC(RS(Z))        &trans  &ext_power EP_TOG   &kp MINUS &kp KP_PLUS     &kp LBRC  &kp RBRC &trans  &kp RSHIFT
                                        &bt BT_SEL 0   &bt BT_SEL 1     &bt BT_SEL 2       &trans    &trans   &kp UNDERSCORE    &trans    &trans    &trans &kp A
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   ^   |  v   |  ->   |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans
&kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &trans      &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &trans
&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH
                     &kp C   &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans &kp C
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
	};
};
